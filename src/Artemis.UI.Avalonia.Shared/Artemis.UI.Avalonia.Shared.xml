<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Artemis.UI.Shared</name>
    </assembly>
    <members>
        <member name="F:Artemis.UI.Shared.Controls.ArtemisIcon.IconProperty">
            <summary>
                Gets or sets the currently displayed icon as either a <see cref="T:Material.Icons.MaterialIconKind" /> or an <see cref="T:System.Uri" /> pointing
                to an SVG
            </summary>
        </member>
        <member name="P:Artemis.UI.Shared.Controls.ArtemisIcon.Icon">
            <summary>
                Gets or sets the currently displayed icon as either a <see cref="T:Material.Icons.MaterialIconKind" /> or an <see cref="T:System.Uri" /> pointing
                to an SVG
            </summary>
        </member>
        <member name="T:Artemis.UI.Shared.Controls.DeviceVisualizer">
            <summary>
                Visualizes an <see cref="T:Artemis.Core.ArtemisDevice" /> with optional per-LED colors
            </summary>
        </member>
        <member name="M:Artemis.UI.Shared.Controls.DeviceVisualizer.#ctor">
            <inheritdoc />
        </member>
        <member name="M:Artemis.UI.Shared.Controls.DeviceVisualizer.Render(Avalonia.Media.DrawingContext)">
            <inheritdoc />
        </member>
        <member name="E:Artemis.UI.Shared.Controls.DeviceVisualizer.LedClicked">
            <summary>
                Occurs when a LED of the device has been clicked
            </summary>
        </member>
        <member name="M:Artemis.UI.Shared.Controls.DeviceVisualizer.OnLedClicked(Artemis.UI.Shared.Events.LedClickedEventArgs)">
            <summary>
                Invokes the <see cref="E:Artemis.UI.Shared.Controls.DeviceVisualizer.LedClicked" /> event
            </summary>
            <param name="e"></param>
        </member>
        <member name="F:Artemis.UI.Shared.Controls.DeviceVisualizer.DeviceProperty">
            <summary>
                Gets or sets the <see cref="T:Artemis.Core.ArtemisDevice" /> to display
            </summary>
        </member>
        <member name="P:Artemis.UI.Shared.Controls.DeviceVisualizer.Device">
            <summary>
                Gets or sets the <see cref="T:Artemis.Core.ArtemisDevice" /> to display
            </summary>
        </member>
        <member name="F:Artemis.UI.Shared.Controls.DeviceVisualizer.ShowColorsProperty">
            <summary>
                Gets or sets boolean indicating  whether or not to show per-LED colors
            </summary>
        </member>
        <member name="P:Artemis.UI.Shared.Controls.DeviceVisualizer.ShowColors">
            <summary>
                Gets or sets a boolean indicating whether or not to show per-LED colors
            </summary>
        </member>
        <member name="F:Artemis.UI.Shared.Controls.DeviceVisualizer.HighlightedLedsProperty">
            <summary>
                Gets or sets a list of LEDs to highlight
            </summary>
        </member>
        <member name="P:Artemis.UI.Shared.Controls.DeviceVisualizer.HighlightedLeds">
            <summary>
                Gets or sets a list of LEDs to highlight
            </summary>
        </member>
        <member name="M:Artemis.UI.Shared.Controls.DeviceVisualizer.OnDetachedFromVisualTree(Avalonia.VisualTreeAttachmentEventArgs)">
            <inheritdoc />
        </member>
        <member name="M:Artemis.UI.Shared.Controls.DeviceVisualizer.OnAttachedToLogicalTree(Avalonia.LogicalTree.LogicalTreeAttachmentEventArgs)">
            <inheritdoc />
        </member>
        <member name="M:Artemis.UI.Shared.Controls.DeviceVisualizer.OnDetachedFromLogicalTree(Avalonia.LogicalTree.LogicalTreeAttachmentEventArgs)">
            <inheritdoc />
        </member>
        <member name="M:Artemis.UI.Shared.Controls.DeviceVisualizer.MeasureOverride(Avalonia.Size)">
            <inheritdoc />
        </member>
        <member name="F:Artemis.UI.Shared.Controls.EnumComboBox.ValueProperty">
            <summary>
                Gets or sets the currently selected value
            </summary>
        </member>
        <member name="P:Artemis.UI.Shared.Controls.EnumComboBox.Value">
            <summary>
                Gets or sets the currently selected value
            </summary>
        </member>
        <member name="M:Artemis.UI.Shared.Controls.EnumComboBox.OnAttachedToLogicalTree(Avalonia.LogicalTree.LogicalTreeAttachmentEventArgs)">
            <inheritdoc />
        </member>
        <member name="M:Artemis.UI.Shared.Controls.EnumComboBox.OnDetachedFromLogicalTree(Avalonia.LogicalTree.LogicalTreeAttachmentEventArgs)">
            <inheritdoc />
        </member>
        <member name="F:Artemis.UI.Shared.Controls.ProfileConfigurationIcon.ConfigurationIconProperty">
            <summary>
                Gets or sets the <see cref="T:Artemis.Core.ProfileConfigurationIcon" /> to display
            </summary>
        </member>
        <member name="P:Artemis.UI.Shared.Controls.ProfileConfigurationIcon.ConfigurationIcon">
            <summary>
                Gets or sets the <see cref="T:Artemis.Core.ProfileConfigurationIcon" /> to display
            </summary>
        </member>
        <member name="T:Artemis.UI.Shared.Controls.SelectionRectangle">
            <summary>
                Visualizes an <see cref="T:Artemis.Core.ArtemisDevice" /> with optional per-LED colors
            </summary>
        </member>
        <member name="F:Artemis.UI.Shared.Controls.SelectionRectangle.BackgroundProperty">
            <summary>
                Defines the <see cref="P:Artemis.UI.Shared.Controls.SelectionRectangle.Background" /> property.
            </summary>
        </member>
        <member name="F:Artemis.UI.Shared.Controls.SelectionRectangle.BorderBrushProperty">
            <summary>
                Defines the <see cref="P:Artemis.UI.Shared.Controls.SelectionRectangle.BorderBrush" /> property.
            </summary>
        </member>
        <member name="F:Artemis.UI.Shared.Controls.SelectionRectangle.BorderThicknessProperty">
            <summary>
                Defines the <see cref="P:Artemis.UI.Shared.Controls.SelectionRectangle.BorderBrush" /> property.
            </summary>
        </member>
        <member name="F:Artemis.UI.Shared.Controls.SelectionRectangle.InputElementProperty">
            <summary>
                Defines the <see cref="M:Artemis.UI.Shared.Controls.SelectionRectangle.get_InputElement" /> property.
            </summary>
        </member>
        <member name="M:Artemis.UI.Shared.Controls.SelectionRectangle.#ctor">
            <inheritdoc />
        </member>
        <member name="P:Artemis.UI.Shared.Controls.SelectionRectangle.Background">
            <summary>
                Gets or sets a brush used to paint the control's background.
            </summary>
        </member>
        <member name="P:Artemis.UI.Shared.Controls.SelectionRectangle.BorderBrush">
            <summary>
                Gets or sets a brush used to paint the control's border
            </summary>
        </member>
        <member name="P:Artemis.UI.Shared.Controls.SelectionRectangle.BorderThickness">
            <summary>
                Gets or sets the width of the control's border
            </summary>
        </member>
        <member name="M:Artemis.UI.Shared.Controls.SelectionRectangle.OnAttachedToVisualTree(Avalonia.VisualTreeAttachmentEventArgs)">
            <inheritdoc />
        </member>
        <member name="M:Artemis.UI.Shared.Controls.SelectionRectangle.OnDetachedFromVisualTree(Avalonia.VisualTreeAttachmentEventArgs)">
            <inheritdoc />
        </member>
        <member name="T:Artemis.UI.Shared.Converters.ColorToSKColorConverter">
            <summary>
                Converts <see cref="T:Avalonia.Media.Color" /> into <see cref="T:SkiaSharp.SKColor" />.
            </summary>
        </member>
        <member name="M:Artemis.UI.Shared.Converters.ColorToSKColorConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <inheritdoc />
        </member>
        <member name="M:Artemis.UI.Shared.Converters.ColorToSKColorConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <inheritdoc />
        </member>
        <member name="T:Artemis.UI.Shared.Converters.EnumToBooleanConverter">
            <summary>
                Converts an enum into a boolean.
            </summary>
        </member>
        <member name="M:Artemis.UI.Shared.Converters.EnumToBooleanConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <inheritdoc />
        </member>
        <member name="M:Artemis.UI.Shared.Converters.EnumToBooleanConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <inheritdoc />
        </member>
        <member name="T:Artemis.UI.Shared.Converters.SKColorToColorConverter">
            <summary>
                Converts <see cref="T:SkiaSharp.SKColor" /> into <see cref="T:Avalonia.Media.Color" />.
            </summary>
        </member>
        <member name="M:Artemis.UI.Shared.Converters.SKColorToColorConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <inheritdoc />
        </member>
        <member name="M:Artemis.UI.Shared.Converters.SKColorToColorConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <inheritdoc />
        </member>
        <member name="T:Artemis.UI.Shared.Converters.TypeToStringConverter">
            <summary>
                Converts <see cref="T:System.Type" /> into <see cref="T:System.String" />.
            </summary>
        </member>
        <member name="M:Artemis.UI.Shared.Converters.TypeToStringConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <inheritdoc />
        </member>
        <member name="M:Artemis.UI.Shared.Converters.TypeToStringConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <inheritdoc />
        </member>
        <member name="T:Artemis.UI.Shared.DataModelVisualization.DataModelDisplayViewModel`1">
            <summary>
                Represents a <see cref="T:Artemis.Core.Modules.DataModel" /> display view model
            </summary>
            <typeparam name="T">The type of the data model</typeparam>
        </member>
        <member name="P:Artemis.UI.Shared.DataModelVisualization.DataModelDisplayViewModel`1.DisplayValue">
            <summary>
                Gets or sets value that the view model must display
            </summary>
        </member>
        <member name="M:Artemis.UI.Shared.DataModelVisualization.DataModelDisplayViewModel`1.UpdateValue(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Artemis.UI.Shared.DataModelVisualization.DataModelDisplayViewModel`1.OnDisplayValueUpdated">
            <summary>
                Occurs when the display value is updated
            </summary>
        </member>
        <member name="T:Artemis.UI.Shared.DataModelVisualization.DataModelDisplayViewModel">
            <summary>
                For internal use only, implement <see cref="T:Artemis.UI.Shared.DataModelVisualization.DataModelDisplayViewModel`1" /> instead.
            </summary>
        </member>
        <member name="P:Artemis.UI.Shared.DataModelVisualization.DataModelDisplayViewModel.PropertyDescription">
            <summary>
                Gets the property description of this value
            </summary>
        </member>
        <member name="P:Artemis.UI.Shared.DataModelVisualization.DataModelDisplayViewModel.InternalGuard">
            <summary>
                Prevents this type being implemented directly, implement <see cref="T:Artemis.UI.Shared.DataModelVisualization.DataModelDisplayViewModel`1" /> instead.
            </summary>
        </member>
        <member name="M:Artemis.UI.Shared.DataModelVisualization.DataModelDisplayViewModel.UpdateValue(System.Object)">
            <summary>
                Updates the display value
            </summary>
            <param name="model">The value to set</param>
        </member>
        <member name="T:Artemis.UI.Shared.DataModelVisualization.DataModelInputViewModel`1">
            <summary>
                Represents a <see cref="T:Artemis.Core.Modules.DataModel" /> input view model
            </summary>
            <typeparam name="T">The type of the data model</typeparam>
        </member>
        <member name="M:Artemis.UI.Shared.DataModelVisualization.DataModelInputViewModel`1.#ctor(Artemis.Core.Modules.DataModelPropertyAttribute,`0)">
            <summary>
                Creates a new instance of the <see cref="T:Artemis.UI.Shared.DataModelVisualization.DataModelInputViewModel`1" /> class
            </summary>
            <param name="targetDescription">The description of the property this input VM is representing</param>
            <param name="initialValue">The initial value to set the input value to</param>
        </member>
        <member name="P:Artemis.UI.Shared.DataModelVisualization.DataModelInputViewModel`1.InputValue">
            <summary>
                Gets or sets the value shown in the input
            </summary>
        </member>
        <member name="P:Artemis.UI.Shared.DataModelVisualization.DataModelInputViewModel`1.TargetDescription">
            <summary>
                Gets the description of the property this input VM is representing
            </summary>
        </member>
        <member name="M:Artemis.UI.Shared.DataModelVisualization.DataModelInputViewModel`1.Submit">
            <inheritdoc />
        </member>
        <member name="M:Artemis.UI.Shared.DataModelVisualization.DataModelInputViewModel`1.Cancel">
            <inheritdoc />
        </member>
        <member name="T:Artemis.UI.Shared.DataModelVisualization.DataModelInputViewModel">
            <summary>
                For internal use only, implement <see cref="T:Artemis.UI.Shared.DataModelVisualization.DataModelInputViewModel`1" /> instead.
            </summary>
        </member>
        <member name="P:Artemis.UI.Shared.DataModelVisualization.DataModelInputViewModel.InternalGuard">
            <summary>
                Prevents this type being implemented directly, implement <see cref="T:Artemis.UI.Shared.DataModelVisualization.DataModelInputViewModel`1" /> instead.
            </summary>
        </member>
        <member name="P:Artemis.UI.Shared.DataModelVisualization.DataModelInputViewModel.CompatibleConversionTypes">
            <summary>
                Gets the types this input view model can support through type conversion. This list is defined when registering the
                view model.
            </summary>
        </member>
        <member name="M:Artemis.UI.Shared.DataModelVisualization.DataModelInputViewModel.Submit">
            <summary>
                Submits the input value and removes this view model.
                <para>This is called automatically when the user presses enter or clicks outside the view</para>
            </summary>
        </member>
        <member name="M:Artemis.UI.Shared.DataModelVisualization.DataModelInputViewModel.Cancel">
            <summary>
                Discards changes to the input value and removes this view model.
                <para>This is called automatically when the user presses escape</para>
            </summary>
        </member>
        <member name="M:Artemis.UI.Shared.DataModelVisualization.DataModelInputViewModel.OnSubmit">
            <summary>
                Called before the current value is submitted
            </summary>
        </member>
        <member name="M:Artemis.UI.Shared.DataModelVisualization.DataModelInputViewModel.OnCancel">
            <summary>
                Called before the current value is discarded
            </summary>
        </member>
        <member name="T:Artemis.UI.Shared.DataModelVisualization.DataModelVisualizationRegistration">
            <summary>
                Represents a layer brush registered through
                <see cref="M:Artemis.UI.Shared.Services.Interfaces.IDataModelUIService.RegisterDataModelInput``1(Artemis.Core.Plugin,System.Collections.Generic.IReadOnlyCollection{System.Type})" /> or
                <see cref="M:Artemis.UI.Shared.Services.Interfaces.IDataModelUIService.RegisterDataModelDisplay``1(Artemis.Core.Plugin)" />
            </summary>
        </member>
        <member name="P:Artemis.UI.Shared.DataModelVisualization.DataModelVisualizationRegistration.RegistrationType">
            <summary>
                Gets the type of registration, either a display or an input
            </summary>
        </member>
        <member name="P:Artemis.UI.Shared.DataModelVisualization.DataModelVisualizationRegistration.Plugin">
            <summary>
                Gets the plugin that registered the visualization
            </summary>
        </member>
        <member name="P:Artemis.UI.Shared.DataModelVisualization.DataModelVisualizationRegistration.SupportedType">
            <summary>
                Gets the type supported by the visualization
            </summary>
        </member>
        <member name="P:Artemis.UI.Shared.DataModelVisualization.DataModelVisualizationRegistration.ViewModelType">
            <summary>
                Gets the view model type of the visualization
            </summary>
        </member>
        <member name="P:Artemis.UI.Shared.DataModelVisualization.DataModelVisualizationRegistration.CompatibleConversionTypes">
            <summary>
                Gets a read only collection of types this visualization can convert to and from
            </summary>
        </member>
        <member name="T:Artemis.UI.Shared.DataModelVisualization.RegistrationType">
            <summary>
                Represents a type of data model visualization registration
            </summary>
        </member>
        <member name="F:Artemis.UI.Shared.DataModelVisualization.RegistrationType.Display">
            <summary>
                A visualization used for displaying values
            </summary>
        </member>
        <member name="F:Artemis.UI.Shared.DataModelVisualization.RegistrationType.Input">
            <summary>
                A visualization used for inputting values
            </summary>
        </member>
        <member name="T:Artemis.UI.Shared.DataModelVisualization.Shared.DataModelEventViewModel">
            <summary>
                Represents a view model that visualizes an event data model property
            </summary>
        </member>
        <member name="P:Artemis.UI.Shared.DataModelVisualization.Shared.DataModelEventViewModel.DisplayValueType">
            <summary>
                Gets the type of event arguments this event triggers and that must be displayed as children
            </summary>
        </member>
        <member name="M:Artemis.UI.Shared.DataModelVisualization.Shared.DataModelEventViewModel.Update(Artemis.UI.Shared.Services.Interfaces.IDataModelUIService,Artemis.UI.Shared.DataModelVisualization.Shared.DataModelUpdateConfiguration)">
            <inheritdoc />
        </member>
        <member name="M:Artemis.UI.Shared.DataModelVisualization.Shared.DataModelEventViewModel.GetCurrentValue">
            <summary>
            Always returns <see langword="null"/> for data model events
            </summary>
        </member>
        <member name="M:Artemis.UI.Shared.DataModelVisualization.Shared.DataModelEventViewModel.ToString">
            <inheritdoc />
        </member>
        <member name="T:Artemis.UI.Shared.DataModelVisualization.Shared.DataModelListPropertiesViewModel">
            <summary>
                Represents a view model that wraps a regular <see cref="T:Artemis.UI.Shared.DataModelVisualization.Shared.DataModelPropertiesViewModel" /> but contained in
                a <see cref="T:Artemis.UI.Shared.DataModelVisualization.Shared.DataModelListViewModel" />
            </summary>
        </member>
        <member name="P:Artemis.UI.Shared.DataModelVisualization.Shared.DataModelListPropertiesViewModel.Index">
            <summary>
                Gets the index of the element within the list
            </summary>
        </member>
        <member name="P:Artemis.UI.Shared.DataModelVisualization.Shared.DataModelListPropertiesViewModel.ListType">
            <summary>
                Gets the type of elements contained in the list
            </summary>
        </member>
        <member name="P:Artemis.UI.Shared.DataModelVisualization.Shared.DataModelListPropertiesViewModel.DisplayValue">
            <summary>
                Gets the value of the property that is being visualized
            </summary>
        </member>
        <member name="P:Artemis.UI.Shared.DataModelVisualization.Shared.DataModelListPropertiesViewModel.DisplayViewModel">
            <summary>
                Gets the view model that handles displaying the property
            </summary>
        </member>
        <member name="P:Artemis.UI.Shared.DataModelVisualization.Shared.DataModelListPropertiesViewModel.DisplayPath">
            <inheritdoc />
        </member>
        <member name="M:Artemis.UI.Shared.DataModelVisualization.Shared.DataModelListPropertiesViewModel.Update(Artemis.UI.Shared.Services.Interfaces.IDataModelUIService,Artemis.UI.Shared.DataModelVisualization.Shared.DataModelUpdateConfiguration)">
            <inheritdoc />
        </member>
        <member name="M:Artemis.UI.Shared.DataModelVisualization.Shared.DataModelListPropertiesViewModel.GetCurrentValue">
            <inheritdoc />
        </member>
        <member name="M:Artemis.UI.Shared.DataModelVisualization.Shared.DataModelListPropertiesViewModel.ToString">
            <inheritdoc />
        </member>
        <member name="T:Artemis.UI.Shared.DataModelVisualization.Shared.DataModelListPropertyViewModel">
            <summary>
                Represents a view model that visualizes a single data model property contained in a
                <see cref="T:Artemis.UI.Shared.DataModelVisualization.Shared.DataModelListViewModel" />
            </summary>
        </member>
        <member name="P:Artemis.UI.Shared.DataModelVisualization.Shared.DataModelListPropertyViewModel.Index">
            <summary>
                Gets the index of the element within the list
            </summary>
        </member>
        <member name="P:Artemis.UI.Shared.DataModelVisualization.Shared.DataModelListPropertyViewModel.ListType">
            <summary>
                Gets the type of elements contained in the list
            </summary>
        </member>
        <member name="M:Artemis.UI.Shared.DataModelVisualization.Shared.DataModelListPropertyViewModel.GetCurrentValue">
            <inheritdoc />
        </member>
        <member name="M:Artemis.UI.Shared.DataModelVisualization.Shared.DataModelListPropertyViewModel.Update(Artemis.UI.Shared.Services.Interfaces.IDataModelUIService,Artemis.UI.Shared.DataModelVisualization.Shared.DataModelUpdateConfiguration)">
            <inheritdoc />
        </member>
        <member name="M:Artemis.UI.Shared.DataModelVisualization.Shared.DataModelListPropertyViewModel.ToString">
            <inheritdoc />
        </member>
        <member name="T:Artemis.UI.Shared.DataModelVisualization.Shared.DataModelListViewModel">
            <summary>
                Represents a view model that visualizes a list data model property
            </summary>
        </member>
        <member name="P:Artemis.UI.Shared.DataModelVisualization.Shared.DataModelListViewModel.List">
            <summary>
                Gets the instance of the list that is being visualized
            </summary>
        </member>
        <member name="P:Artemis.UI.Shared.DataModelVisualization.Shared.DataModelListViewModel.ListCount">
            <summary>
                Gets amount of elements in the list that is being visualized
            </summary>
        </member>
        <member name="P:Artemis.UI.Shared.DataModelVisualization.Shared.DataModelListViewModel.DisplayValueType">
            <summary>
                Gets the type of elements this list contains and that must be displayed as children
            </summary>
        </member>
        <member name="P:Artemis.UI.Shared.DataModelVisualization.Shared.DataModelListViewModel.CountDisplay">
            <summary>
                Gets a human readable display count
            </summary>
        </member>
        <member name="P:Artemis.UI.Shared.DataModelVisualization.Shared.DataModelListViewModel.ListChildren">
            <summary>
                Gets a list of child view models that visualize the elements in the list
            </summary>
        </member>
        <member name="M:Artemis.UI.Shared.DataModelVisualization.Shared.DataModelListViewModel.Update(Artemis.UI.Shared.Services.Interfaces.IDataModelUIService,Artemis.UI.Shared.DataModelVisualization.Shared.DataModelUpdateConfiguration)">
            <inheritdoc />
        </member>
        <member name="M:Artemis.UI.Shared.DataModelVisualization.Shared.DataModelListViewModel.ToString">
            <inheritdoc />
        </member>
        <member name="T:Artemis.UI.Shared.DataModelVisualization.Shared.DataModelPropertiesViewModel">
            <summary>
                Represents a view model that visualizes a class (POCO) data model property containing child properties
            </summary>
        </member>
        <member name="P:Artemis.UI.Shared.DataModelVisualization.Shared.DataModelPropertiesViewModel.DisplayValueType">
            <summary>
                Gets the type of the property that is being visualized
            </summary>
        </member>
        <member name="P:Artemis.UI.Shared.DataModelVisualization.Shared.DataModelPropertiesViewModel.DisplayValue">
            <summary>
                Gets the value of the property that is being visualized
            </summary>
        </member>
        <member name="M:Artemis.UI.Shared.DataModelVisualization.Shared.DataModelPropertiesViewModel.Update(Artemis.UI.Shared.Services.Interfaces.IDataModelUIService,Artemis.UI.Shared.DataModelVisualization.Shared.DataModelUpdateConfiguration)">
            <inheritdoc />
        </member>
        <member name="M:Artemis.UI.Shared.DataModelVisualization.Shared.DataModelPropertiesViewModel.GetCurrentValue">
            <inheritdoc />
        </member>
        <member name="M:Artemis.UI.Shared.DataModelVisualization.Shared.DataModelPropertiesViewModel.ToString">
            <inheritdoc />
        </member>
        <member name="T:Artemis.UI.Shared.DataModelVisualization.Shared.DataModelPropertyViewModel">
            <summary>
                Represents a view model that visualizes a single data model property contained in a
                <see cref="T:Artemis.UI.Shared.DataModelVisualization.Shared.DataModelPropertiesViewModel" />
            </summary>
        </member>
        <member name="P:Artemis.UI.Shared.DataModelVisualization.Shared.DataModelPropertyViewModel.DisplayValue">
            <summary>
                Gets the value of the property that is being visualized
            </summary>
        </member>
        <member name="P:Artemis.UI.Shared.DataModelVisualization.Shared.DataModelPropertyViewModel.DisplayValueType">
            <summary>
                Gets the type of the property that is being visualized
            </summary>
        </member>
        <member name="P:Artemis.UI.Shared.DataModelVisualization.Shared.DataModelPropertyViewModel.DisplayViewModel">
            <summary>
            Gets the view model used to display the display value
            </summary>
        </member>
        <member name="M:Artemis.UI.Shared.DataModelVisualization.Shared.DataModelPropertyViewModel.Update(Artemis.UI.Shared.Services.Interfaces.IDataModelUIService,Artemis.UI.Shared.DataModelVisualization.Shared.DataModelUpdateConfiguration)">
            <inheritdoc />
        </member>
        <member name="M:Artemis.UI.Shared.DataModelVisualization.Shared.DataModelPropertyViewModel.ToString">
            <inheritdoc />
        </member>
        <member name="T:Artemis.UI.Shared.DataModelVisualization.Shared.DataModelUpdateConfiguration">
            <summary>
                Represents a configuration to use while updating a <see cref="T:Artemis.UI.Shared.DataModelVisualization.Shared.DataModelVisualizationViewModel" />
            </summary>
        </member>
        <member name="M:Artemis.UI.Shared.DataModelVisualization.Shared.DataModelUpdateConfiguration.#ctor(System.Boolean)">
            <summary>
                Creates a new instance of the <see cref="T:Artemis.UI.Shared.DataModelVisualization.Shared.DataModelUpdateConfiguration" /> class
            </summary>
            <param name="createEventChildren">A boolean indicating whether or not event children should be created</param>
        </member>
        <member name="P:Artemis.UI.Shared.DataModelVisualization.Shared.DataModelUpdateConfiguration.CreateEventChildren">
            <summary>
                Gets a boolean indicating whether or not event children should be created
            </summary>
        </member>
        <member name="T:Artemis.UI.Shared.DataModelVisualization.Shared.DataModelVisualizationViewModel">
            <summary>
                Represents a base class for a view model that visualizes a part of the data model
            </summary>
        </member>
        <member name="P:Artemis.UI.Shared.DataModelVisualization.Shared.DataModelVisualizationViewModel.IsRootViewModel">
            <summary>
                Gets a boolean indicating whether this view model is at the root of the data model
            </summary>
        </member>
        <member name="P:Artemis.UI.Shared.DataModelVisualization.Shared.DataModelVisualizationViewModel.DataModelPath">
            <summary>
                Gets the data model path to the property this view model is visualizing
            </summary>
        </member>
        <member name="P:Artemis.UI.Shared.DataModelVisualization.Shared.DataModelVisualizationViewModel.Path">
            <summary>
                Gets a string representation of the path backing this model
            </summary>
        </member>
        <member name="P:Artemis.UI.Shared.DataModelVisualization.Shared.DataModelVisualizationViewModel.Depth">
            <summary>
                Gets the property depth of the view model
            </summary>
        </member>
        <member name="P:Artemis.UI.Shared.DataModelVisualization.Shared.DataModelVisualizationViewModel.DataModel">
            <summary>
                Gets the data model backing this view model
            </summary>
        </member>
        <member name="P:Artemis.UI.Shared.DataModelVisualization.Shared.DataModelVisualizationViewModel.PropertyDescription">
            <summary>
                Gets the property description of the property this view model is visualizing
            </summary>
        </member>
        <member name="P:Artemis.UI.Shared.DataModelVisualization.Shared.DataModelVisualizationViewModel.Parent">
            <summary>
                Gets the parent of this view model
            </summary>
        </member>
        <member name="P:Artemis.UI.Shared.DataModelVisualization.Shared.DataModelVisualizationViewModel.Children">
            <summary>
                Gets or sets an observable collection containing the children of this view model
            </summary>
        </member>
        <member name="P:Artemis.UI.Shared.DataModelVisualization.Shared.DataModelVisualizationViewModel.IsMatchingFilteredTypes">
            <summary>
                Gets a boolean indicating whether the property being visualized matches the types last provided to
                <see cref="M:Artemis.UI.Shared.DataModelVisualization.Shared.DataModelVisualizationViewModel.ApplyTypeFilter(System.Boolean,System.Type[])" />
            </summary>
        </member>
        <member name="P:Artemis.UI.Shared.DataModelVisualization.Shared.DataModelVisualizationViewModel.IsVisualizationExpanded">
            <summary>
                Gets or sets a boolean indicating whether the visualization is expanded, exposing the <see cref="P:Artemis.UI.Shared.DataModelVisualization.Shared.DataModelVisualizationViewModel.Children" />
            </summary>
        </member>
        <member name="P:Artemis.UI.Shared.DataModelVisualization.Shared.DataModelVisualizationViewModel.DisplayPath">
            <summary>
                Gets a user-friendly representation of the <see cref="P:Artemis.UI.Shared.DataModelVisualization.Shared.DataModelVisualizationViewModel.DataModelPath" />
            </summary>
        </member>
        <member name="M:Artemis.UI.Shared.DataModelVisualization.Shared.DataModelVisualizationViewModel.Update(Artemis.UI.Shared.Services.Interfaces.IDataModelUIService,Artemis.UI.Shared.DataModelVisualization.Shared.DataModelUpdateConfiguration)">
            <summary>
                Updates the datamodel and if in an parent, any children
            </summary>
            <param name="dataModelUIService">The data model UI service used during update</param>
            <param name="configuration">The configuration to apply while updating</param>
        </member>
        <member name="M:Artemis.UI.Shared.DataModelVisualization.Shared.DataModelVisualizationViewModel.GetCurrentValue">
            <summary>
                Gets the current value of the property being visualized
            </summary>
            <returns>The current value of the property being visualized</returns>
        </member>
        <member name="M:Artemis.UI.Shared.DataModelVisualization.Shared.DataModelVisualizationViewModel.ApplyTypeFilter(System.Boolean,System.Type[])">
            <summary>
                Determines whether the provided types match the type of the property being visualized and sets the result in
                <see cref="P:Artemis.UI.Shared.DataModelVisualization.Shared.DataModelVisualizationViewModel.IsMatchingFilteredTypes" />
            </summary>
            <param name="looseMatch">Whether the type may be a loose match, meaning it can be cast or converted</param>
            <param name="filteredTypes">The types to filter</param>
        </member>
        <member name="E:Artemis.UI.Shared.DataModelVisualization.Shared.DataModelVisualizationViewModel.UpdateRequested">
            <summary>
                Occurs when an update to the property this view model visualizes is requested
            </summary>
        </member>
        <member name="M:Artemis.UI.Shared.DataModelVisualization.Shared.DataModelVisualizationViewModel.OnUpdateRequested">
            <summary>
                Invokes the <see cref="E:Artemis.UI.Shared.DataModelVisualization.Shared.DataModelVisualizationViewModel.UpdateRequested" /> event
            </summary>
        </member>
        <member name="M:Artemis.UI.Shared.DataModelVisualization.Shared.DataModelVisualizationViewModel.Dispose(System.Boolean)">
            <summary>
                Releases the unmanaged resources used by the object and optionally releases the managed resources.
            </summary>
            <param name="disposing">
                <see langword="true" /> to release both managed and unmanaged resources;
                <see langword="false" /> to release only unmanaged resources.
            </param>
        </member>
        <member name="M:Artemis.UI.Shared.DataModelVisualization.Shared.DataModelVisualizationViewModel.Dispose">
            <inheritdoc />
        </member>
        <member name="T:Artemis.UI.Shared.DefaultTypes.DataModel.Display.DefaultDataModelDisplayViewModel">
            <summary>
                Represents the default data model display view model that is used when no display viewmodel specific for the type
                is registered
            </summary>
        </member>
        <member name="T:Artemis.UI.Shared.Events.LedClickedEventArgs">
            <summary>
                Provides data on LED click events raised by the device visualizer
            </summary>
        </member>
        <member name="P:Artemis.UI.Shared.Events.LedClickedEventArgs.Device">
            <summary>
                The device that was clicked
            </summary>
        </member>
        <member name="P:Artemis.UI.Shared.Events.LedClickedEventArgs.Led">
            <summary>
                The LED that was clicked
            </summary>
        </member>
        <member name="T:Artemis.UI.Shared.Events.ProfileConfigurationEventArgs">
            <summary>
                Provides data on profile related events raised by the profile editor
            </summary>
        </member>
        <member name="P:Artemis.UI.Shared.Events.ProfileConfigurationEventArgs.ProfileConfiguration">
            <summary>
                Gets the profile the event was raised for
            </summary>
        </member>
        <member name="P:Artemis.UI.Shared.Events.ProfileConfigurationEventArgs.PreviousProfileConfiguration">
            <summary>
                If applicable, the previous active profile before the event was raised
            </summary>
        </member>
        <member name="T:Artemis.UI.Shared.Events.RenderProfileElementEventArgs">
            <summary>
                Provides data on profile element related events raised by the profile editor
            </summary>
        </member>
        <member name="P:Artemis.UI.Shared.Events.RenderProfileElementEventArgs.RenderProfileElement">
            <summary>
                Gets the profile element the event was raised for
            </summary>
        </member>
        <member name="P:Artemis.UI.Shared.Events.RenderProfileElementEventArgs.PreviousRenderProfileElement">
            <summary>
                If applicable, the previous active profile element before the event was raised
            </summary>
        </member>
        <member name="T:Artemis.UI.Shared.ArtemisSharedUIException">
            <summary>
                Represents errors that occur within the Artemis Shared UI library
            </summary>
        </member>
        <member name="T:Artemis.UI.Shared.Extensions.ControlExtensions">
            <summary>
                Provides extension methods for Avalonia's <see cref="T:Avalonia.Controls.Control" /> type
            </summary>
        </member>
        <member name="M:Artemis.UI.Shared.Extensions.ControlExtensions.ClearAllDataValidationErrors(Avalonia.Controls.Control)">
            <summary>
                Clears all data validation errors on the given control and any of it's logical siblings
            </summary>
            <param name="target">The target control</param>
        </member>
        <member name="T:Artemis.UI.Shared.Ninject.SharedUIModule">
            <summary>
                The main <see cref="T:Ninject.Modules.NinjectModule" /> of the Artemis Shared UI toolkit that binds all services
            </summary>
        </member>
        <member name="M:Artemis.UI.Shared.Ninject.SharedUIModule.Load">
            <inheritdoc />
        </member>
        <member name="T:Artemis.UI.Shared.PluginConfigurationDialog`1">
            <inheritdoc />
        </member>
        <member name="P:Artemis.UI.Shared.PluginConfigurationDialog`1.Type">
            <inheritdoc />
        </member>
        <member name="T:Artemis.UI.Shared.PluginConfigurationDialog">
            <summary>
                Describes a configuration dialog for a specific plugin
            </summary>
        </member>
        <member name="P:Artemis.UI.Shared.PluginConfigurationDialog.Type">
            <inheritdoc />
        </member>
        <member name="T:Artemis.UI.Shared.PluginConfigurationViewModel">
            <summary>
                Represents a view model for a plugin configuration window
            </summary>
        </member>
        <member name="M:Artemis.UI.Shared.PluginConfigurationViewModel.#ctor(Artemis.Core.Plugin)">
            <summary>
                Creates a new instance of the <see cref="T:Artemis.UI.Shared.PluginConfigurationViewModel" /> class
            </summary>
            <param name="plugin"></param>
        </member>
        <member name="P:Artemis.UI.Shared.PluginConfigurationViewModel.Plugin">
            <summary>
                Gets the plugin this configuration view model is associated with
            </summary>
        </member>
        <member name="M:Artemis.UI.Shared.PluginConfigurationViewModel.Close">
            <summary>
                Closes the window hosting the view model
            </summary>
        </member>
        <member name="E:Artemis.UI.Shared.PluginConfigurationViewModel.CloseRequested">
            <summary>
                Occurs when the the window hosting the view model should close
            </summary>
        </member>
        <member name="T:Artemis.UI.Shared.Services.Builders.FileDialogFilterBuilder">
            <summary>
                Represents a builder that can create a <see cref="T:Avalonia.Controls.FileDialogFilter" />.
            </summary>
        </member>
        <member name="M:Artemis.UI.Shared.Services.Builders.FileDialogFilterBuilder.WithName(System.String)">
            <summary>
                Sets the name of the filter
            </summary>
        </member>
        <member name="M:Artemis.UI.Shared.Services.Builders.FileDialogFilterBuilder.WithExtension(System.String)">
            <summary>
                Adds the provided extension to the filter
            </summary>
        </member>
        <member name="M:Artemis.UI.Shared.Services.Builders.NotificationBuilder.HavingButton(System.Action{Artemis.UI.Shared.Services.Builders.NotificationButtonBuilder})">
            <summary>
                Add a filter to the dialog
            </summary>
        </member>
        <member name="T:Artemis.UI.Shared.Services.Builders.OpenFileDialogBuilder">
            <summary>
                Represents a builder that can create a <see cref="T:Avalonia.Controls.OpenFileDialog" />.
            </summary>
        </member>
        <member name="M:Artemis.UI.Shared.Services.Builders.OpenFileDialogBuilder.WithAllowMultiple">
            <summary>
                Indicate that the user can select multiple files.
            </summary>
        </member>
        <member name="M:Artemis.UI.Shared.Services.Builders.OpenFileDialogBuilder.WithTitle(System.String)">
            <summary>
                Set the title of the dialog
            </summary>
        </member>
        <member name="M:Artemis.UI.Shared.Services.Builders.OpenFileDialogBuilder.WithDirectory(System.String)">
            <summary>
                Set the initial directory of the dialog
            </summary>
        </member>
        <member name="M:Artemis.UI.Shared.Services.Builders.OpenFileDialogBuilder.WithInitialFileName(System.String)">
            <summary>
                Set the initial file name of the dialog
            </summary>
        </member>
        <member name="M:Artemis.UI.Shared.Services.Builders.OpenFileDialogBuilder.HavingFilter(System.Action{Artemis.UI.Shared.Services.Builders.FileDialogFilterBuilder})">
            <summary>
                Add a filter to the dialog
            </summary>
        </member>
        <member name="M:Artemis.UI.Shared.Services.Builders.OpenFileDialogBuilder.ShowAsync">
            <summary>
                Shows the file dialog
            </summary>
            <returns>
                A task that on completion returns an array containing the full path to the selected
                files, or null if the dialog was canceled.
            </returns>
        </member>
        <member name="T:Artemis.UI.Shared.Services.Builders.SaveFileDialogBuilder">
            <summary>
                Represents a builder that can create a <see cref="T:Avalonia.Controls.SaveFileDialog" />.
            </summary>
        </member>
        <member name="M:Artemis.UI.Shared.Services.Builders.SaveFileDialogBuilder.WithTitle(System.String)">
            <summary>
                Set the title of the dialog
            </summary>
        </member>
        <member name="M:Artemis.UI.Shared.Services.Builders.SaveFileDialogBuilder.WithDirectory(System.String)">
            <summary>
                Set the initial directory of the dialog
            </summary>
        </member>
        <member name="M:Artemis.UI.Shared.Services.Builders.SaveFileDialogBuilder.WithInitialFileName(System.String)">
            <summary>
                Set the initial file name of the dialog
            </summary>
        </member>
        <member name="M:Artemis.UI.Shared.Services.Builders.SaveFileDialogBuilder.WithDefaultExtension(System.String)">
            <summary>
                Set the default extension of the dialog
            </summary>
        </member>
        <member name="M:Artemis.UI.Shared.Services.Builders.SaveFileDialogBuilder.HavingFilter(System.Action{Artemis.UI.Shared.Services.Builders.FileDialogFilterBuilder})">
            <summary>
                Add a filter to the dialog
            </summary>
        </member>
        <member name="M:Artemis.UI.Shared.Services.Builders.SaveFileDialogBuilder.ShowAsync">
            <summary>
                Shows the save file dialog.
            </summary>
            <returns>
                A task that on completion contains the full path of the save location, or null if the
                dialog was canceled.
            </returns>
        </member>
        <member name="T:Artemis.UI.Shared.Services.Interfaces.IArtemisSharedUIService">
            <summary>
                Represents a service provided by the Artemis Shared UI library
            </summary>
        </member>
        <member name="T:Artemis.UI.Shared.Services.Interfaces.IDataModelUIService">
            <summary>
                A service for UI related data model tasks
            </summary>
        </member>
        <member name="P:Artemis.UI.Shared.Services.Interfaces.IDataModelUIService.RegisteredDataModelEditors">
            <summary>
                Gets a read-only list of all registered data model editors
            </summary>
        </member>
        <member name="P:Artemis.UI.Shared.Services.Interfaces.IDataModelUIService.RegisteredDataModelDisplays">
            <summary>
                Gets a read-only list of all registered data model displays
            </summary>
        </member>
        <member name="M:Artemis.UI.Shared.Services.Interfaces.IDataModelUIService.GetMainDataModelVisualization">
            <summary>
                Creates a data model visualization view model for the main data model
            </summary>
            <returns>
                A data model visualization view model containing all data model expansions and modules that expand the main
                data model
            </returns>
        </member>
        <member name="M:Artemis.UI.Shared.Services.Interfaces.IDataModelUIService.GetPluginDataModelVisualization(System.Collections.Generic.List{Artemis.Core.Modules.Module},System.Boolean)">
            <summary>
                Creates a data model visualization view model for the data model of the provided plugin feature
            </summary>
            <param name="modules">The modules to create the data model visualization view model for</param>
            <param name="includeMainDataModel">
                Whether or not also to include the main data model (and therefore any modules marked
                as <see cref="P:Artemis.Core.Modules.Module.IsAlwaysAvailable" />)
            </param>
            <returns>A data model visualization view model containing the data model of the provided feature</returns>
        </member>
        <member name="M:Artemis.UI.Shared.Services.Interfaces.IDataModelUIService.UpdateModules(Artemis.UI.Shared.DataModelVisualization.Shared.DataModelPropertiesViewModel)">
            <summary>
                Updates the children of the provided main data model visualization, removing disabled children and adding newly
                enabled children
            </summary>
        </member>
        <member name="M:Artemis.UI.Shared.Services.Interfaces.IDataModelUIService.RegisterDataModelInput``1(Artemis.Core.Plugin,System.Collections.Generic.IReadOnlyCollection{System.Type})">
            <summary>
                Registers a new data model editor
            </summary>
            <typeparam name="T">The type of the editor</typeparam>
            <param name="plugin">The plugin this editor belongs to</param>
            <param name="compatibleConversionTypes">A collection of extra types this editor supports</param>
            <returns>A registration that can be used to remove the editor</returns>
        </member>
        <member name="M:Artemis.UI.Shared.Services.Interfaces.IDataModelUIService.RegisterDataModelDisplay``1(Artemis.Core.Plugin)">
            <summary>
                Registers a new data model display
            </summary>
            <typeparam name="T">The type of the display</typeparam>
            <param name="plugin">The plugin this display belongs to</param>
            <returns>A registration that can be used to remove the display</returns>
        </member>
        <member name="M:Artemis.UI.Shared.Services.Interfaces.IDataModelUIService.RemoveDataModelInput(Artemis.UI.Shared.DataModelVisualization.DataModelVisualizationRegistration)">
            <summary>
                Removes a data model editor
            </summary>
            <param name="registration">
                The registration of the editor as returned by <see cref="M:Artemis.UI.Shared.Services.Interfaces.IDataModelUIService.RegisterDataModelInput``1(Artemis.Core.Plugin,System.Collections.Generic.IReadOnlyCollection{System.Type})" />
            </param>
        </member>
        <member name="M:Artemis.UI.Shared.Services.Interfaces.IDataModelUIService.RemoveDataModelDisplay(Artemis.UI.Shared.DataModelVisualization.DataModelVisualizationRegistration)">
            <summary>
                Removes a data model display
            </summary>
            <param name="registration">
                The registration of the display as returned by <see cref="M:Artemis.UI.Shared.Services.Interfaces.IDataModelUIService.RegisterDataModelDisplay``1(Artemis.Core.Plugin)" />
            </param>
        </member>
        <member name="M:Artemis.UI.Shared.Services.Interfaces.IDataModelUIService.GetDataModelDisplayViewModel(System.Type,Artemis.Core.Modules.DataModelPropertyAttribute,System.Boolean)">
            <summary>
                Creates the most appropriate display view model for the provided <paramref name="propertyType" /> that can display
                a value
            </summary>
            <param name="propertyType">The type of data model property to find a display view model for</param>
            <param name="description">The description of the data model property</param>
            <param name="fallBackToDefault">
                If <see langword="true"></see>, a simple .ToString() display view model will be
                returned if nothing else is found
            </param>
            <returns>The most appropriate display view model for the provided <paramref name="propertyType"></paramref></returns>
        </member>
        <member name="M:Artemis.UI.Shared.Services.Interfaces.IDataModelUIService.GetDataModelInputViewModel(System.Type,Artemis.Core.Modules.DataModelPropertyAttribute,System.Object,System.Action{System.Object,System.Boolean})">
            <summary>
                Creates the most appropriate input view model for the provided <paramref name="propertyType" /> that allows
                inputting a value
            </summary>
            <param name="propertyType">The type of data model property to find a display view model for</param>
            <param name="description">The description of the data model property</param>
            <param name="initialValue">The initial value to show in the input</param>
            <param name="updateCallback">A function to call whenever the input was updated (submitted or not)</param>
            <returns>The most appropriate input view model for the provided <paramref name="propertyType" /></returns>
        </member>
        <member name="M:Artemis.UI.Shared.Services.Interfaces.IWindowService.ShowWindow``1(System.ValueTuple{System.String,System.Object}[])">
            <summary>
            Creates a view model instance of type <typeparamref name="TViewModel" /> and shows its corresponding View as a window
            </summary>
            <typeparam name="TViewModel">The type of view model to create</typeparam>
            <returns>The created view model</returns>
        </member>
        <member name="M:Artemis.UI.Shared.Services.Interfaces.IWindowService.ShowWindow(System.Object)">
            <summary>
            Given a ViewModel, show its corresponding View as a window
            </summary>
            <param name="viewModel">ViewModel to show the View for</param>
        </member>
        <member name="M:Artemis.UI.Shared.Services.Interfaces.IWindowService.ShowExceptionDialog(System.String,System.Exception)">
            <summary>
            Shows a dialog displaying the given exception
            </summary>
            <param name="title">The title of the dialog</param>
            <param name="exception">The exception to display</param>
        </member>
        <member name="M:Artemis.UI.Shared.Services.Interfaces.IWindowService.ShowDialogAsync``1(Artemis.UI.Shared.DialogViewModelBase{``0})">
            <summary>
            Given an existing ViewModel, show its corresponding View as a Dialog
            </summary>
            <typeparam name="TResult">The return type</typeparam>
            <param name="viewModel">ViewModel to show the View for</param>
            <returns>A task containing the return value of type <typeparamref name="TResult" /></returns>
        </member>
        <member name="M:Artemis.UI.Shared.Services.Interfaces.IWindowService.ShowDialogAsync``2(System.ValueTuple{System.String,System.Object}[])">
            <summary>
            Creates a view model instance of type <typeparamref name="TViewModel"/> and shows its corresponding View as a Dialog
            </summary>
            <typeparam name="TViewModel">The view model type</typeparam>
            <typeparam name="TResult">The return type</typeparam>
            <returns>A task containing the return value of type <typeparamref name="TResult" /></returns>
        </member>
        <member name="M:Artemis.UI.Shared.Services.Interfaces.IWindowService.ShowConfirmContentDialog(System.String,System.String,System.String,System.String)">
            <summary>
            Shows a content dialog asking the user to confirm an action
            </summary>
            <param name="title">The title of the dialog</param>
            <param name="message">The message of the dialog</param>
            <param name="confirm">The text of the confirm button</param>
            <param name="cancel">The text of the cancel button, if <see langword="null"/> the cancel button will not be shown</param>
            <returns>A task containing the result of the dialog, <see langword="true"/> if confirmed; otherwise <see langword="false"/></returns>
        </member>
        <member name="M:Artemis.UI.Shared.Services.Interfaces.IWindowService.CreateOpenFileDialog">
            <summary>
            Creates an open file dialog, use the fluent API to configure it
            </summary>
            <returns>The builder that can be used to configure the dialog</returns>
        </member>
        <member name="M:Artemis.UI.Shared.Services.Interfaces.IWindowService.CreateSaveFileDialog">
            <summary>
            Creates a save file dialog, use the fluent API to configure it
            </summary>
            <returns>The builder that can be used to configure the dialog</returns>
        </member>
        <member name="M:Artemis.UI.Shared.Services.Interfaces.IWindowService.CreateContentDialog">
            <summary>
            Creates a content dialog, use the fluent API to configure it
            </summary>
            <returns>The builder that can be used to configure the dialog</returns>
        </member>
        <member name="M:Artemis.UI.Shared.Services.Interfaces.IWindowService.GetCurrentWindow">
            <summary>
            Gets the current window of the application
            </summary>
            <returns>The current window of the application</returns>
        </member>
        <member name="T:Artemis.UI.Shared.Services.MainWindowService.IMainWindowProvider">
            <summary>
                Represents a class that provides the main window, so that <see cref="T:Artemis.UI.Shared.Services.MainWindowService.IMainWindowService" /> can control the state of
                the main window.
            </summary>
        </member>
        <member name="P:Artemis.UI.Shared.Services.MainWindowService.IMainWindowProvider.IsMainWindowOpen">
            <summary>
                Gets a boolean indicating whether the main window is currently open
            </summary>
        </member>
        <member name="M:Artemis.UI.Shared.Services.MainWindowService.IMainWindowProvider.OpenMainWindow">
            <summary>
                Opens the main window
            </summary>
        </member>
        <member name="M:Artemis.UI.Shared.Services.MainWindowService.IMainWindowProvider.CloseMainWindow">
            <summary>
                Closes the main window
            </summary>
        </member>
        <member name="E:Artemis.UI.Shared.Services.MainWindowService.IMainWindowProvider.MainWindowOpened">
            <summary>
                Occurs when the main window has been opened
            </summary>
        </member>
        <member name="E:Artemis.UI.Shared.Services.MainWindowService.IMainWindowProvider.MainWindowClosed">
            <summary>
                Occurs when the main window has been closed
            </summary>
        </member>
        <member name="P:Artemis.UI.Shared.Services.MainWindowService.IMainWindowService.IsMainWindowOpen">
            <summary>
                Gets a boolean indicating whether the main window is currently open
            </summary>
        </member>
        <member name="M:Artemis.UI.Shared.Services.MainWindowService.IMainWindowService.ConfigureMainWindowProvider(Artemis.UI.Shared.Services.MainWindowService.IMainWindowProvider)">
            <summary>
                Sets up the main window provider that controls the state of the main window
            </summary>
            <param name="mainWindowProvider">The main window provider to use to control the state of the main window</param>
        </member>
        <member name="M:Artemis.UI.Shared.Services.MainWindowService.IMainWindowService.OpenMainWindow">
            <summary>
                Opens the main window if it is not already open
            </summary>
        </member>
        <member name="M:Artemis.UI.Shared.Services.MainWindowService.IMainWindowService.CloseMainWindow">
            <summary>
                Closes the main window if it is not already closed
            </summary>
        </member>
        <member name="E:Artemis.UI.Shared.Services.MainWindowService.IMainWindowService.MainWindowOpened">
            <summary>
                Occurs when the main window has been opened
            </summary>
        </member>
        <member name="E:Artemis.UI.Shared.Services.MainWindowService.IMainWindowService.MainWindowClosed">
            <summary>
                Occurs when the main window has been closed
            </summary>
        </member>
        <member name="T:Artemis.UI.Shared.ContentDialogViewModelBase">
            <summary>
                Represents the base class for Artemis view models
            </summary>
        </member>
        <member name="P:Artemis.UI.Shared.ContentDialogViewModelBase.ContentDialog">
            <summary>
            Gets the content dialog that hosts the view model
            </summary>
        </member>
        <member name="P:Artemis.UI.Shared.ContentDialogViewModelBase.Activator">
            <inheritdoc />
        </member>
        <member name="M:Artemis.UI.Shared.ContentDialogViewModelBase.Dispose(System.Boolean)">
            <summary>
                Releases the unmanaged resources used by the object and optionally releases the managed resources.
            </summary>
            <param name="disposing">
                <see langword="true" /> to release both managed and unmanaged resources;
                <see langword="false" /> to release only unmanaged resources.
            </param>
        </member>
        <member name="M:Artemis.UI.Shared.ContentDialogViewModelBase.Dispose">
            <inheritdoc />
        </member>
        <member name="T:Artemis.UI.Shared.ViewModelValidationBase">
            <summary>
                Represents the base class for Artemis view models
            </summary>
        </member>
        <member name="P:Artemis.UI.Shared.ViewModelValidationBase.DisplayName">
            <summary>
                Gets or sets the display name of the view model
            </summary>
        </member>
        <member name="T:Artemis.UI.Shared.ViewModelBase">
            <summary>
                Represents the base class for Artemis view models
            </summary>
        </member>
        <member name="P:Artemis.UI.Shared.ViewModelBase.DisplayName">
            <summary>
                Gets or sets the display name of the view model
            </summary>
        </member>
        <member name="T:Artemis.UI.Shared.ActivatableViewModelBase">
            <summary>
                Represents the base class for Artemis view models that are interested in the activated event
            </summary>
        </member>
        <member name="M:Artemis.UI.Shared.ActivatableViewModelBase.#ctor">
            <inheritdoc />
        </member>
        <member name="M:Artemis.UI.Shared.ActivatableViewModelBase.Dispose(System.Boolean)">
            <summary>
                Releases the unmanaged resources used by the object and optionally releases the managed resources.
            </summary>
            <param name="disposing">
                <see langword="true" /> to release both managed and unmanaged resources;
                <see langword="false" /> to release only unmanaged resources.
            </param>
        </member>
        <member name="P:Artemis.UI.Shared.ActivatableViewModelBase.Activator">
            <inheritdoc />
        </member>
        <member name="M:Artemis.UI.Shared.ActivatableViewModelBase.Dispose">
            <inheritdoc />
        </member>
        <member name="T:Artemis.UI.Shared.DialogViewModelBase`1">
            <summary>
                Represents the base class for Artemis view models used to drive dialogs
            </summary>
        </member>
        <member name="M:Artemis.UI.Shared.DialogViewModelBase`1.Close(`0)">
            <summary>
                Closes the dialog with the given <paramref name="result" />
            </summary>
            <param name="result">The result of the dialog</param>
        </member>
        <member name="M:Artemis.UI.Shared.DialogViewModelBase`1.Cancel">
            <summary>
                Closes the dialog without a result
            </summary>
        </member>
    </members>
</doc>
