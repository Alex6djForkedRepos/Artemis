<UserControl x:Class="Artemis.UI.Screens.ProfileEditor.DisplayConditions.Event.EventsConditionView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:local="clr-namespace:Artemis.UI.Screens.ProfileEditor.DisplayConditions.Event"
             xmlns:converters="clr-namespace:Artemis.UI.Converters"
             xmlns:s="https://github.com/canton7/Stylet"
             xmlns:controls="clr-namespace:Artemis.VisualScripting.Editor.Controls;assembly=Artemis.VisualScripting"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:core="clr-namespace:Artemis.Core;assembly=Artemis.Core"
             mc:Ignorable="d"
             d:DesignHeight="450" d:DesignWidth="800"
             d:DataContext="{d:DesignInstance {x:Type local:EventsConditionViewModel}}">
    <UserControl.Resources>
        <converters:ComparisonConverter x:Key="ComparisonConverter" />
    </UserControl.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="*" />
            <RowDefinition Height="22" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>

        <TabControl Grid.Row="0"
                    VerticalAlignment="Stretch"
                    ItemsSource="{Binding Items}"
                    SelectedItem="{Binding ActiveItem}"
                    Style="{StaticResource MaterialDesignTabControl}">
            <TabControl.ItemTemplate>
                <DataTemplate>
                    <DockPanel LastChildFill="True" Margin="-15 0">
                        <Button DockPanel.Dock="Right"
                                Style="{StaticResource MaterialDesignIconForegroundButton}"
                                Command="{s:Action DeleteEvent}"
                                s:View.ActionTarget="{Binding}"
                                CommandParameter="{Binding}"
                                Width="25"
                                Height="25">
                            <materialDesign:PackIcon Kind="Close" Width="15" Height="15" Foreground="{DynamicResource MaterialDesignBody}" />
                        </Button>
                        <Label Content="{Binding DisplayName}" DockPanel.Dock="Left" />
                    </DockPanel>
                </DataTemplate>
            </TabControl.ItemTemplate>
            <TabControl.ContentTemplate>
                <DataTemplate>
                    <ContentControl s:View.Model="{Binding IsAsync=True}"
                                    VerticalContentAlignment="Stretch"
                                    HorizontalContentAlignment="Stretch"
                                    IsTabStop="False"
                                    TextElement.Foreground="{DynamicResource MaterialDesignBody}" />
                </DataTemplate>
            </TabControl.ContentTemplate>
        </TabControl>

        <!-- Trigger mode -->
        <TextBlock Grid.Row="1" Grid.Column="0" Text="Trigger mode" VerticalAlignment="Center">
            <TextBlock.ToolTip>
                <ToolTip Placement="Center" VerticalOffset="-30">
                    <TextBlock>
                        Configure how the layer should act when the event(s) trigger
                    </TextBlock>
                </ToolTip>
            </TextBlock.ToolTip>
        </TextBlock>

        <materialDesign:ColorZone Grid.Row="2" Grid.Column="0" Mode="Standard" CornerRadius="3">
            <Grid HorizontalAlignment="Stretch">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition />
                    <ColumnDefinition />
                    <ColumnDefinition />
                </Grid.ColumnDefinitions>
                <RadioButton Grid.Column="0"
                             Style="{StaticResource MaterialDesignTabRadioButton}"
                             IsChecked="{Binding Path=EventOverlapMode, Converter={StaticResource ComparisonConverter}, ConverterParameter={x:Static core:TimeLineEventOverlapMode.Restart}}">
                    <TextBlock VerticalAlignment="Center" FontSize="12">
                        <materialDesign:PackIcon Kind="Repeat" VerticalAlignment="Center" Margin="-3 0 0 -3" />
                        RESTART
                    </TextBlock>
                    <RadioButton.ToolTip>
                        <ToolTip Placement="Center" VerticalOffset="-40">
                            <TextBlock>
                                Stop the current run and restart the timeline
                            </TextBlock>
                        </ToolTip>
                    </RadioButton.ToolTip>
                </RadioButton>
                <RadioButton Grid.Column="1"
                             Style="{StaticResource MaterialDesignTabRadioButton}"
                             IsChecked="{Binding Path=EventOverlapMode, Converter={StaticResource ComparisonConverter}, ConverterParameter={x:Static core:TimeLineEventOverlapMode.Toggle}}">
                    <TextBlock VerticalAlignment="Center" FontSize="12">
                        <materialDesign:PackIcon Kind="TrafficLight" VerticalAlignment="Center" Margin="-3 0 0 -3" />
                        TOGGLE
                    </TextBlock>
                    <RadioButton.ToolTip>
                        <ToolTip Placement="Center" VerticalOffset="-40">
                            <TextBlock>
                                Repeat the timeline until the event fires again
                            </TextBlock>
                        </ToolTip>
                    </RadioButton.ToolTip>
                </RadioButton>
                <RadioButton Grid.Column="2"
                             Style="{StaticResource MaterialDesignTabRadioButton}"
                             IsChecked="{Binding Path=EventOverlapMode, Converter={StaticResource ComparisonConverter}, ConverterParameter={x:Static core:TimeLineEventOverlapMode.Ignore}}">
                    <TextBlock VerticalAlignment="Center" FontSize="12">
                        <materialDesign:PackIcon Kind="EarHearingOff" VerticalAlignment="Center" Margin="-3 0 0 -3" />
                        IGNORE
                    </TextBlock>
                    <RadioButton.ToolTip>
                        <ToolTip Placement="Center" VerticalOffset="-40">
                            <TextBlock>
                                Ignore subsequent event fires until the timeline finishes
                            </TextBlock>
                        </ToolTip>
                    </RadioButton.ToolTip>
                </RadioButton>
                <RadioButton Grid.Column="3"
                             Style="{StaticResource MaterialDesignTabRadioButton}"
                             IsChecked="{Binding Path=EventOverlapMode, Converter={StaticResource ComparisonConverter}, ConverterParameter={x:Static core:TimeLineEventOverlapMode.Copy}}">
                    <TextBlock VerticalAlignment="Center" FontSize="12">
                        <materialDesign:PackIcon Kind="ContentCopy" VerticalAlignment="Center" Margin="-3 0 0 -3" />
                        COPY
                    </TextBlock>
                    <RadioButton.ToolTip>
                        <ToolTip Placement="Center" VerticalOffset="-40">
                            <TextBlock>
                                Play another copy of the timeline on top of the current run
                            </TextBlock>
                        </ToolTip>
                    </RadioButton.ToolTip>
                </RadioButton>
            </Grid>
        </materialDesign:ColorZone>
    </Grid>
</UserControl>