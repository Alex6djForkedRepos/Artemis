<UserControl x:Class="Artemis.UI.Screens.ProfileEditor.DisplayConditions.DisplayConditionEventView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:local="clr-namespace:Artemis.UI.Screens.ProfileEditor.DisplayConditions"
             xmlns:core="clr-namespace:Artemis.Core;assembly=Artemis.Core"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:converters="clr-namespace:Artemis.UI.Converters"
             xmlns:s="https://github.com/canton7/Stylet"
             xmlns:controls="clr-namespace:Artemis.VisualScripting.Editor.Controls;assembly=Artemis.VisualScripting"
             mc:Ignorable="d"
             d:DesignHeight="450" d:DesignWidth="800"
             d:DataContext="{d:DesignInstance {x:Type local:DisplayConditionEventViewModel}}">
    <UserControl.Resources>
        <converters:ComparisonConverter x:Key="ComparisonConverter" />
    </UserControl.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="*" />
            <RowDefinition Height="22" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>

        <Grid Grid.Row="0" MouseUp="{s:Action ScriptGridMouseUp}" Cursor="Hand">
            <controls:VisualScriptPresenter Script="{Binding RenderProfileElement.DisplayCondition}"
                                            AutoFitScript="True"
                                            Visibility="{Binding RenderProfileElement.DisplayCondition, Converter={StaticResource NullToVisibilityConverter}}" />
            <Border Opacity="0">
                <Border.Background>
                    <SolidColorBrush Color="{Binding Color, Source={StaticResource MaterialDesignCardBackground}}" Opacity="0.75" />
                </Border.Background>
                <Border.Style>
                    <Style>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsMouseOver, RelativeSource={RelativeSource AncestorType={x:Type Grid}, Mode=FindAncestor}}" Value="True">
                                <DataTrigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.25" />
                                        </Storyboard>
                                    </BeginStoryboard>
                                </DataTrigger.EnterActions>
                                <DataTrigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.25" />
                                        </Storyboard>
                                    </BeginStoryboard>
                                </DataTrigger.ExitActions>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Border.Style>
                <Grid HorizontalAlignment="Center">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition />
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>
                    <TextBlock Style="{StaticResource MaterialDesignHeadline5TextBlock}" VerticalAlignment="Center" Grid.Column="0">
                        Click to edit script
                    </TextBlock>
                    <materialDesign:PackIcon Kind="OpenInNew" Margin="10 " Width="30" Height="30" Grid.Column="1" VerticalAlignment="Center" />
                </Grid>
            </Border>
        </Grid>

        <!-- Trigger mode -->
        <TextBlock Grid.Row="1" Grid.Column="0" Text="Trigger mode" VerticalAlignment="Center">
            <TextBlock.ToolTip>
                <ToolTip Placement="Center" VerticalOffset="-30">
                    <TextBlock>
                        Configure how the layer should act when the event(s) trigger
                    </TextBlock>
                </ToolTip>
            </TextBlock.ToolTip>
        </TextBlock>

        <materialDesign:ColorZone Grid.Row="2" Grid.Column="0" Mode="Standard" CornerRadius="3">
            <Grid HorizontalAlignment="Stretch">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition />
                    <ColumnDefinition />
                    <ColumnDefinition />
                </Grid.ColumnDefinitions>
                <RadioButton Grid.Column="0"
                             Style="{StaticResource MaterialDesignTabRadioButton}"
                             IsChecked="{Binding Path=EventOverlapMode, Converter={StaticResource ComparisonConverter}, ConverterParameter={x:Static core:TimeLineEventOverlapMode.Restart}}">
                    <TextBlock VerticalAlignment="Center" FontSize="12">
                        <materialDesign:PackIcon Kind="Repeat" VerticalAlignment="Center" Margin="-3 0 0 -3" />
                        RESTART
                    </TextBlock>
                    <RadioButton.ToolTip>
                        <ToolTip Placement="Center" VerticalOffset="-40">
                            <TextBlock>
                                Stop the current run and restart the timeline
                            </TextBlock>
                        </ToolTip>
                    </RadioButton.ToolTip>
                </RadioButton>
                <RadioButton Grid.Column="1"
                             Style="{StaticResource MaterialDesignTabRadioButton}"
                             IsChecked="{Binding Path=EventOverlapMode, Converter={StaticResource ComparisonConverter}, ConverterParameter={x:Static core:TimeLineEventOverlapMode.Toggle}}">
                    <TextBlock VerticalAlignment="Center" FontSize="12">
                        <materialDesign:PackIcon Kind="TrafficLight" VerticalAlignment="Center" Margin="-3 0 0 -3" />
                        TOGGLE
                    </TextBlock>
                    <RadioButton.ToolTip>
                        <ToolTip Placement="Center" VerticalOffset="-40">
                            <TextBlock>
                                Repeat the timeline until the event fires again
                            </TextBlock>
                        </ToolTip>
                    </RadioButton.ToolTip>
                </RadioButton>
                <RadioButton Grid.Column="2"
                             Style="{StaticResource MaterialDesignTabRadioButton}"
                             IsChecked="{Binding Path=EventOverlapMode, Converter={StaticResource ComparisonConverter}, ConverterParameter={x:Static core:TimeLineEventOverlapMode.Ignore}}">
                    <TextBlock VerticalAlignment="Center" FontSize="12">
                        <materialDesign:PackIcon Kind="EarHearingOff" VerticalAlignment="Center" Margin="-3 0 0 -3" />
                        IGNORE
                    </TextBlock>
                    <RadioButton.ToolTip>
                        <ToolTip Placement="Center" VerticalOffset="-40">
                            <TextBlock>
                                Ignore subsequent event fires until the timeline finishes
                            </TextBlock>
                        </ToolTip>
                    </RadioButton.ToolTip>
                </RadioButton>
                <RadioButton Grid.Column="3"
                             Style="{StaticResource MaterialDesignTabRadioButton}"
                             IsChecked="{Binding Path=EventOverlapMode, Converter={StaticResource ComparisonConverter}, ConverterParameter={x:Static core:TimeLineEventOverlapMode.Copy}}">
                    <TextBlock VerticalAlignment="Center" FontSize="12">
                        <materialDesign:PackIcon Kind="ContentCopy" VerticalAlignment="Center" Margin="-3 0 0 -3" />
                        COPY
                    </TextBlock>
                    <RadioButton.ToolTip>
                        <ToolTip Placement="Center" VerticalOffset="-40">
                            <TextBlock>
                                Play another copy of the timeline on top of the current run
                            </TextBlock>
                        </ToolTip>
                    </RadioButton.ToolTip>
                </RadioButton>
            </Grid>
        </materialDesign:ColorZone>
    </Grid>
</UserControl>