<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:system="clr-namespace:System;assembly=System.Runtime"
                    xmlns:controls="clr-namespace:Artemis.VisualScripting.Editor.Controls"
                    xmlns:converters="clr-namespace:Artemis.VisualScripting.Converters"
                    xmlns:collections="clr-namespace:System.Collections;assembly=System.Runtime"
                    xmlns:skiaSharp="clr-namespace:SkiaSharp;assembly=SkiaSharp"
                    xmlns:shared="clr-namespace:Artemis.UI.Shared;assembly=Artemis.UI.Shared">
    <converters:CenterTranslateConverter x:Key="CenterTranslateConverter" />

    <ControlTemplate x:Key="TemplateVisualScriptCablePresenter"
                     TargetType="{x:Type controls:VisualScriptCablePresenter}">
        <Canvas>
            <Path x:Name="PART_Path"
                  Stroke="{TemplateBinding BorderBrush}"
                  StrokeThickness="{TemplateBinding Thickness}"
                  StrokeStartLineCap="Round"
                  StrokeEndLineCap="Round">
                <Path.Data>
                    <PathGeometry>
                        <PathGeometry.Figures>
                            <PathFigureCollection>
                                <PathFigure StartPoint="{Binding Cable.From.AbsolutePosition, RelativeSource={RelativeSource TemplatedParent}}">
                                    <PathFigure.Segments>
                                        <PathSegmentCollection>
                                            <BezierSegment Point1="{Binding Cable.From.AbsoluteCableTargetPosition, RelativeSource={RelativeSource TemplatedParent}}"
                                                           Point2="{Binding Cable.To.AbsoluteCableTargetPosition, RelativeSource={RelativeSource TemplatedParent}}"
                                                           Point3="{Binding Cable.To.AbsolutePosition, RelativeSource={RelativeSource TemplatedParent}}" />
                                        </PathSegmentCollection>
                                    </PathFigure.Segments>
                                </PathFigure>
                            </PathFigureCollection>
                        </PathGeometry.Figures>
                    </PathGeometry>
                </Path.Data>
            </Path>

            <Border Canvas.Left="{Binding ValuePosition.X, RelativeSource={RelativeSource TemplatedParent}}"
                    Canvas.Top="{Binding ValuePosition.Y, RelativeSource={RelativeSource TemplatedParent}}"
                    Background="#2A2A2A"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="2"
                    Padding="6"
                    CornerRadius="2"
                    x:Name="PART_ValueDisplay">
                <Border.RenderTransform>
                    <TranslateTransform X="{Binding ActualWidth, RelativeSource={RelativeSource AncestorType=Border}, Converter={StaticResource CenterTranslateConverter}}"
                                        Y="{Binding ActualHeight, RelativeSource={RelativeSource AncestorType=Border}, Converter={StaticResource CenterTranslateConverter}}" />
                </Border.RenderTransform>

                <Border.Resources>
                    <DataTemplate DataType="{x:Type skiaSharp:SKColor}">
                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
                            <StackPanel.Resources>
                                <shared:SKColorToStringConverter x:Key="SKColorToStringConverter" />
                                <shared:SKColorToColorConverter x:Key="SKColorToColorConverter" />
                            </StackPanel.Resources>
                            <TextBlock x:Name="HexDisplay"
                                       Text="{Binding Converter={StaticResource SKColorToStringConverter}}"
                                       VerticalAlignment="Center"
                                       HorizontalAlignment="Stretch" />
                            <Border Width="{Binding ActualHeight, ElementName=HexDisplay}"
                                    Height="{Binding ActualHeight, ElementName=HexDisplay}"
                                    CornerRadius="{Binding ActualHeight, ElementName=HexDisplay}"
                                    Margin="5 0 0 0"
                                    VerticalAlignment="Center"
                                    HorizontalAlignment="Right"
                                    Background="{StaticResource Checkerboard}">
                                <Ellipse Stroke="{DynamicResource NormalBorderBrush}">
                                    <Ellipse.Fill>
                                        <SolidColorBrush Color="{Binding Converter={StaticResource SKColorToColorConverter}}" />
                                    </Ellipse.Fill>
                                </Ellipse>
                            </Border>
                        </StackPanel>
                    </DataTemplate>

                    <!-- <DataTemplate DataType=""> -->
                    <!--     <TextBlock></TextBlock> -->
                    <!-- </DataTemplate> -->
                </Border.Resources>

                <ContentControl Content="{Binding Cable.From.Pin.PinValue, RelativeSource={RelativeSource TemplatedParent}}" />
                <!-- <TextBlock Text="{Binding Cable.From.Pin.PinValue, TargetNullValue=-, RelativeSource={RelativeSource TemplatedParent}}" /> -->
            </Border>
        </Canvas>

    </ControlTemplate>

    <Style x:Key="StyleVisualScriptCablePresenter"
           TargetType="{x:Type controls:VisualScriptCablePresenter}">

        <Setter Property="BorderBrush" Value="#FFFFFFFF" />
        <Setter Property="Thickness" Value="4" />
        <Setter Property="Template" Value="{StaticResource TemplateVisualScriptCablePresenter}" />

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Thickness" Value="6" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style BasedOn="{StaticResource StyleVisualScriptCablePresenter}"
           TargetType="{x:Type controls:VisualScriptCablePresenter}" />

</ResourceDictionary>